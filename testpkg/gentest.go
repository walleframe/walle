// Code generated by MockGen. DO NOT EDIT.
// Source: wtest.go

// Package testpkg is a generated GoMock package.
package testpkg

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFuncCall is a mock of FuncCall interface.
type MockFuncCall struct {
	ctrl     *gomock.Controller
	recorder *MockFuncCallMockRecorder
}

// MockFuncCallMockRecorder is the mock recorder for MockFuncCall.
type MockFuncCallMockRecorder struct {
	mock *MockFuncCall
}

// NewMockFuncCall creates a new mock instance.
func NewMockFuncCall(ctrl *gomock.Controller) *MockFuncCall {
	mock := &MockFuncCall{ctrl: ctrl}
	mock.recorder = &MockFuncCallMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFuncCall) EXPECT() *MockFuncCallMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockFuncCall) Call(v ...interface{}) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range v {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Call", varargs...)
}

// Call indicates an expected call of Call.
func (mr *MockFuncCallMockRecorder) Call(v ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockFuncCall)(nil).Call), v...)
}
