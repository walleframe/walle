// Code generated by MockGen. DO NOT EDIT.
// Source: balance.go

// Package mock_balancer is a generated GoMock package.
package mock_balancer

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	balancer "github.com/walleframe/walle/network/balancer"
	discovery "github.com/walleframe/walle/network/discovery"
)

// MockPickerBuilder is a mock of PickerBuilder interface.
type MockPickerBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockPickerBuilderMockRecorder
}

// MockPickerBuilderMockRecorder is the mock recorder for MockPickerBuilder.
type MockPickerBuilderMockRecorder struct {
	mock *MockPickerBuilder
}

// NewMockPickerBuilder creates a new mock instance.
func NewMockPickerBuilder(ctrl *gomock.Controller) *MockPickerBuilder {
	mock := &MockPickerBuilder{ctrl: ctrl}
	mock.recorder = &MockPickerBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPickerBuilder) EXPECT() *MockPickerBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockPickerBuilder) Build(arg0 discovery.Entries) balancer.Picker {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", arg0)
	ret0, _ := ret[0].(balancer.Picker)
	return ret0
}

// Build indicates an expected call of Build.
func (mr *MockPickerBuilderMockRecorder) Build(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockPickerBuilder)(nil).Build), arg0)
}

// MockPicker is a mock of Picker interface.
type MockPicker struct {
	ctrl     *gomock.Controller
	recorder *MockPickerMockRecorder
}

// MockPickerMockRecorder is the mock recorder for MockPicker.
type MockPickerMockRecorder struct {
	mock *MockPicker
}

// NewMockPicker creates a new mock instance.
func NewMockPicker(ctrl *gomock.Controller) *MockPicker {
	mock := &MockPicker{ctrl: ctrl}
	mock.recorder = &MockPickerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPicker) EXPECT() *MockPickerMockRecorder {
	return m.recorder
}

// Pick mocks base method.
func (m *MockPicker) Pick(ctx context.Context) (discovery.Entry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pick", ctx)
	ret0, _ := ret[0].(discovery.Entry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pick indicates an expected call of Pick.
func (mr *MockPickerMockRecorder) Pick(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pick", reflect.TypeOf((*MockPicker)(nil).Pick), ctx)
}
